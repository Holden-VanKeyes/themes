"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/constants/answerKey.ts":
/*!****************************************!*\
  !*** ./src/app/constants/answerKey.ts ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GAME_EMOJIS: function() { return /* binding */ GAME_EMOJIS; },\n/* harmony export */   GAME_MESSAGES: function() { return /* binding */ GAME_MESSAGES; },\n/* harmony export */   answerKey: function() { return /* binding */ answerKey; }\n/* harmony export */ });\n// '20241201': {\n//     rule: {\n//       pattern: '',\n//       explanation: '',\n//     },\n//     sets: [\n//       {\n//         hint: '',\n//         answers: ['', '', '', '', ''],\n//         correct: '',\n//         explanation: '',\n//       },\n//       {\n//         hint: '',\n//         answers: ['', '', '', '', ''],\n//         correct: '',\n//         explanation: '',\n//       },\n//       {\n//         hint: '',\n//         answers: ['', '', '', '', ''],\n//         correct: '',\n//         explanation: '',\n//       },\n//       {\n//         hint: '',\n//         answers: ['', '', '', '', ''],\n//         correct: '',\n//         explanation: '',\n//       },\n//     ],\n//   },\nconst GAME_MESSAGES = {\n    4: \"Perfect!\",\n    3: \"Bravo!\",\n    2: \"Not Too Shabby!\",\n    1: \"Squeaked By!\",\n    0: \"Sorry, No Dice!\"\n};\nconst GAME_EMOJIS = {\n    4: \"\\uD83E\\uDD84\",\n    3: \"\\uD83D\\uDC33\",\n    2: \"\\uD83D\\uDC22\",\n    1: \"\\uD83E\\uDDC0\",\n    0: \"\\uD83E\\uDDCA\"\n};\nconst answerKey = {\n    \"20241117\": {\n        rule: {\n            pattern: \"Words with double consonants\",\n            explanation: \"Each correct answer contains two of the same consonant letters next to each other\"\n        },\n        sets: [\n            {\n                hint: \"strawberry\",\n                answers: [\n                    \"peel\",\n                    \"bread\",\n                    \"monkey\",\n                    \"cheddar\",\n                    \"grape\"\n                ],\n                correct: \"cheddar\",\n                explanation: \"Contains 'dd'\"\n            },\n            {\n                hint: \"pinnacle\",\n                answers: [\n                    \"acme\",\n                    \"mountain\",\n                    \"climber\",\n                    \"craggy\",\n                    \"volcano\"\n                ],\n                correct: \"craggy\",\n                explanation: \"Contains 'gg'\"\n            },\n            {\n                hint: \"baseball\",\n                answers: [\n                    \"bat\",\n                    \"strike\",\n                    \"mitt\",\n                    \"umpire\",\n                    \"natural\"\n                ],\n                correct: \"mitt\",\n                explanation: \"Contains 'tt'\"\n            },\n            {\n                hint: \"channel\",\n                answers: [\n                    \"television\",\n                    \"England\",\n                    \"teller\",\n                    \"loch\",\n                    \"remote\"\n                ],\n                correct: \"teller\",\n                explanation: \"Contains 'll'\"\n            }\n        ]\n    },\n    \"20241118\": {\n        rule: {\n            pattern: \"Things typically found or used in pairs\",\n            explanation: \"Each correct answer is something commonly associated with its pair\"\n        },\n        sets: [\n            {\n                hint: \"ear\",\n                answers: [\n                    \"nose\",\n                    \"nostril\",\n                    \"finger\",\n                    \"snot\",\n                    \"hair\"\n                ],\n                correct: \"nose\",\n                explanation: \"We have two ears and two nostrils\"\n            },\n            {\n                hint: \"sock\",\n                answers: [\n                    \"hit\",\n                    \"slap\",\n                    \"shoe\",\n                    \"laundry\",\n                    \"wool\"\n                ],\n                correct: \"shoe\",\n                explanation: \"Socks and shoes are worn as pairs\"\n            },\n            {\n                hint: \"eye\",\n                answers: [\n                    \"cardinal\",\n                    \"astro\",\n                    \"ranger\",\n                    \"dodger\",\n                    \"twin\"\n                ],\n                correct: \"twin\",\n                explanation: \"Like eyes, twins come in pairs\"\n            },\n            {\n                hint: \"a turtle dove\",\n                answers: [\n                    \"a pear tree\",\n                    \"christmas\",\n                    \"boot\",\n                    \"beard\",\n                    \"reindeer\"\n                ],\n                correct: \"boot\",\n                explanation: \"Boots are worn as a pair and Turtle Doves come in pairs in a famous Christmas song\"\n            }\n        ]\n    },\n    \"20241119\": {\n        rule: {\n            pattern: \"Words that become different words when the last letter is removed\",\n            explanation: \"Remove the last letter of each correct answer to find another valid word\"\n        },\n        sets: [\n            {\n                hint: \"paint\",\n                answers: [\n                    \"coat\",\n                    \"hue\",\n                    \"kind\",\n                    \"color\",\n                    \"plain\"\n                ],\n                correct: \"kind\",\n                explanation: \"kind → kin | paint → pain\"\n            },\n            {\n                hint: \"waver\",\n                answers: [\n                    \"staff\",\n                    \"wizard\",\n                    \"story\",\n                    \"theme\",\n                    \"legend\"\n                ],\n                correct: \"theme\",\n                explanation: \"theme → them | waver → wave\"\n            },\n            {\n                hint: \"spare\",\n                answers: [\n                    \"chain\",\n                    \"rope\",\n                    \"extra\",\n                    \"empty\",\n                    \"gone\"\n                ],\n                correct: \"chain\",\n                explanation: \"chain → chai | spare → spar\"\n            },\n            {\n                hint: \"meant\",\n                answers: [\n                    \"deserted\",\n                    \"bare\",\n                    \"spice\",\n                    \"understood\",\n                    \"felt\"\n                ],\n                correct: \"bare\",\n                explanation: \"bare → bar | meant → mean\"\n            }\n        ]\n    },\n    \"20241120\": {\n        rule: {\n            pattern: \"Words with different meanings based on pronunciation\",\n            explanation: \"Each word has different meanings when stressed on different syllables\"\n        },\n        sets: [\n            {\n                hint: \"conduct\",\n                answers: [\n                    \"grow\",\n                    \"flower\",\n                    \"record\",\n                    \"garden\",\n                    \"seed\"\n                ],\n                correct: \"record\",\n                explanation: \"REcord (noun) vs reCORD (verb)\"\n            },\n            {\n                hint: \"conflict\",\n                answers: [\n                    \"oasis\",\n                    \"present\",\n                    \"sand\",\n                    \"cactus\",\n                    \"dry\"\n                ],\n                correct: \"present\",\n                explanation: \"PREsent (noun) vs preSENT (verb)\"\n            },\n            {\n                hint: \"refuse\",\n                answers: [\n                    \"trash\",\n                    \"permit\",\n                    \"garbage\",\n                    \"waste\",\n                    \"deny\"\n                ],\n                correct: \"permit\",\n                explanation: \"PERmit (noun) vs perMIT (verb)\"\n            },\n            {\n                hint: \"object\",\n                answers: [\n                    \"thing\",\n                    \"protest\",\n                    \"item\",\n                    \"matter\",\n                    \"desk\"\n                ],\n                correct: \"protest\",\n                explanation: \"PROtest (noun) vs proTEST (verb)\"\n            }\n        ]\n    },\n    \"20241121\": {\n        rule: {\n            pattern: \"A double vowel somewhere in the answer\",\n            explanation: \"Each correct answer contains two of the same vowels letters next to each other\"\n        },\n        sets: [\n            {\n                hint: \"Snoopy\",\n                answers: [\n                    \"Nosy\",\n                    \"Linus\",\n                    \"Woodstock\",\n                    \"Pig-Pen\",\n                    \"Snake\"\n                ],\n                correct: \"Woodstock\",\n                explanation: \"Contains 'oo\"\n            },\n            {\n                hint: \"Parakeet\",\n                answers: [\n                    \"Stool Pigeon\",\n                    \"Rat Fink\",\n                    \"Parrot\",\n                    \"Carrot\",\n                    \"Heckle\"\n                ],\n                correct: \"Stool Pigeon\",\n                explanation: \"Contains 'oo'\"\n            },\n            {\n                hint: \"Radii\",\n                answers: [\n                    \"Pie\",\n                    \"Power\",\n                    \"Circumference\",\n                    \"Circle\",\n                    \"Floor\"\n                ],\n                correct: \"Floor\",\n                explanation: \"Contains 'oo'\"\n            },\n            {\n                hint: \"Naan\",\n                answers: [\n                    \"Pita\",\n                    \"Falafel\",\n                    \"None\",\n                    \"Nun\",\n                    \"Noon\"\n                ],\n                correct: \"Noon\",\n                explanation: \"Contains 'oo'\"\n            }\n        ]\n    },\n    \"20241122\": {\n        rule: {\n            pattern: \"Words containing animals\",\n            explanation: \"Each word has the name of an animal within the spelling\"\n        },\n        sets: [\n            {\n                hint: \"Spigot\",\n                answers: [\n                    \"Tap\",\n                    \"Scathing\",\n                    \"Swine\",\n                    \"Water\",\n                    \"Wine\"\n                ],\n                correct: \"Scathing\",\n                explanation: \"S(cat)hing -> Cat | S(pig)ot -> Pig\"\n            },\n            {\n                hint: \"Selfish\",\n                answers: [\n                    \"Growl\",\n                    \"Mean\",\n                    \"Anger\",\n                    \"Keep\",\n                    \"Hide\"\n                ],\n                correct: \"Growl\",\n                explanation: \"Gr(owl) -> Owl | Sel(fish) -> Fish\"\n            },\n            {\n                hint: \"Dogma\",\n                answers: [\n                    \"Religion\",\n                    \"Hero\",\n                    \"Villain\",\n                    \"Caper\",\n                    \"Damsel\"\n                ],\n                correct: \"Caper\",\n                explanation: \"C(ape)r -> Ape | (Dog)ma -> Dog\"\n            },\n            {\n                hint: \"Share\",\n                answers: [\n                    \"Hope\",\n                    \"Lend\",\n                    \"Like\",\n                    \"Tweet\",\n                    \"Feel\"\n                ],\n                correct: \"Feel\",\n                explanation: \"F(eel) -> Eel | S(hare) -> Hare\"\n            }\n        ]\n    },\n    \"20241123\": {\n        rule: {\n            pattern: \"Words containing other 4-letter words\",\n            explanation: \"Each word contains a hidden 4-letter word within the spelling\"\n        },\n        sets: [\n            {\n                hint: \"Chairman\",\n                answers: [\n                    \"Harvest\",\n                    \"Circus\",\n                    \"Wisdom\",\n                    \"Wizard\",\n                    \"\"\n                ],\n                correct: \"Harvest\",\n                explanation: \"C(hair)man -> Hair || Har(vest) -> Vest\"\n            },\n            {\n                hint: \"Classic\",\n                answers: [\n                    \"Cedar\",\n                    \"Mango\",\n                    \"Pleasure\",\n                    \"Planet\",\n                    \"Station\"\n                ],\n                correct: \"Planet\",\n                explanation: \"(Class)ic -> Class || (Plan)et -> Plan\"\n            },\n            {\n                hint: \"Machine\",\n                answers: [\n                    \"Compete\",\n                    \"Pinch\",\n                    \"Dinner\",\n                    \"Comfort\",\n                    \"Cylinder\"\n                ],\n                correct: \"Comfort\",\n                explanation: \"Com(fort) -> Fort || (Mach)ine -> Mach\"\n            },\n            {\n                hint: \"Sparkle\",\n                answers: [\n                    \"Basement\",\n                    \"Picture\",\n                    \"Glimmer\",\n                    \"Frame\",\n                    \"Monster\"\n                ],\n                correct: \"Basement\",\n                explanation: \"(Spark)le -> Spark || (Base)ment -> Base\"\n            }\n        ]\n    },\n    \"20241124\": {\n        rule: {\n            pattern: \"Popular shades of pink\",\n            explanation: \"all answers are a shade of pink\"\n        },\n        sets: [\n            {\n                hint: \"Coral\",\n                answers: [\n                    \"Reef\",\n                    \"Surf\",\n                    \"Flamingo\",\n                    \"Pelican\",\n                    \"Octopus\"\n                ],\n                correct: \"Flamingo\",\n                explanation: \"Flamingo pink\"\n            },\n            {\n                hint: \"Bubble Gum\",\n                answers: [\n                    \"Big League\",\n                    \"Bazooka\",\n                    \"Cotton Candy\",\n                    \"Jaw Breaker\",\n                    \"Popsicle\"\n                ],\n                correct: \"Cotton Candy\",\n                explanation: \"Cotton Candy pink\"\n            },\n            {\n                hint: \"Carnation\",\n                answers: [\n                    \"Prom\",\n                    \"Milk\",\n                    \"Fern\",\n                    \"Lilac\",\n                    \"Cherry Blossom\"\n                ],\n                correct: \"Cherry Blossom\",\n                explanation: \"Cherry Blossom pink\"\n            },\n            {\n                hint: \"Salmon\",\n                answers: [\n                    \"Bass\",\n                    \"Guitar\",\n                    \"Hero\",\n                    \"Sandwich\",\n                    \"Rose\"\n                ],\n                correct: \"Rose\",\n                explanation: \"Rose pink\"\n            }\n        ]\n    },\n    \"20241125\": {\n        rule: {\n            pattern: \"Last names of 80's wrestlers\",\n            explanation: \"The 80's were wild y'all!\"\n        },\n        sets: [\n            {\n                hint: \"Rude\",\n                answers: [\n                    \"Savage\",\n                    \"Bad\",\n                    \"Mean\",\n                    \"Attitude\",\n                    \"Boys\"\n                ],\n                correct: \"Savage\",\n                explanation: \"Macho Man Randy Savage | Rick Rude\"\n            },\n            {\n                hint: \"Piper\",\n                answers: [\n                    \"Fiddler\",\n                    \"Organ\",\n                    \"Steamboat\",\n                    \"Smokestack\",\n                    \"Kiln\"\n                ],\n                correct: \"\",\n                explanation: \"Ricky Steamboat | Rowdy Roddy Piper\"\n            },\n            {\n                hint: \"Hart\",\n                answers: [\n                    \"Attack\",\n                    \"Aorta\",\n                    \"Rose\",\n                    \"Candy\",\n                    \"Valentine\"\n                ],\n                correct: \"Valentine\",\n                explanation: \"Greg Valentine | Bret Hart\"\n            },\n            {\n                hint: \"Flair\",\n                answers: [\n                    \"Hunk\",\n                    \"Elan\",\n                    \"Beefcake\",\n                    \"Pizzazz\",\n                    \"Babe\"\n                ],\n                correct: \"Beefcake\",\n                explanation: \"Brutus Beefcake | Rick Flair\"\n            }\n        ]\n    },\n    \"20241126\": {\n        rule: {\n            pattern: \"Well known company acronyms\",\n            explanation: \"combine the first letter from each word in the hint/answer for a company acronym\"\n        },\n        sets: [\n            {\n                hint: \"Imagine black mirrors\",\n                answers: [\n                    \"Race every inch\",\n                    \"Never give up\",\n                    \"Do unto others\",\n                    \"Sleep well knowing\",\n                    \"Be kind rewind\"\n                ],\n                correct: \"Race every inch\",\n                explanation: \"IBM & REI\"\n            },\n            {\n                hint: \"Bring more wings\",\n                answers: [\n                    \"Kiss my grits\",\n                    \"Eat my shorts\",\n                    \"Down the hatch\",\n                    \"Give me cake\",\n                    \"Feed my soul\"\n                ],\n                correct: \"Give me cake\",\n                explanation: \"BMW & GMC\"\n            },\n            {\n                hint: \"Two wheel axle\",\n                answers: [\n                    \"Watch your step\",\n                    \"Under pastel skies\",\n                    \"I do declare\",\n                    \"My only regret\",\n                    \"Long road ahead\"\n                ],\n                correct: \"Under pastel skies\",\n                explanation: \"TWA & UPS\"\n            },\n            {\n                hint: \"Come very soon\",\n                answers: [\n                    \"Don't be late\",\n                    \"Early bird worm\",\n                    \"With wicked fervor\",\n                    \"Who can say\",\n                    \"Hear me now\"\n                ],\n                correct: \"With wicked fervor\",\n                explanation: \"CVS & WWF\"\n            }\n        ]\n    },\n    \"20241127\": {\n        rule: {\n            pattern: \"Types of chili pepper\",\n            explanation: \"\\uD83C\\uDF36️\"\n        },\n        sets: [\n            {\n                hint: \"Banana\",\n                answers: [\n                    \"Monkey\",\n                    \"Smoothie\",\n                    \"Cherry\",\n                    \"Vanilla\",\n                    \"Pineapple\"\n                ],\n                correct: \"Cherry\",\n                explanation: \"Banana pepper | Cherry pepper\"\n            },\n            {\n                hint: \"Bell\",\n                answers: [\n                    \"Liberty\",\n                    \"Tower\",\n                    \"Church\",\n                    \"Haunt\",\n                    \"Ghost\"\n                ],\n                correct: \"Ghost\",\n                explanation: \"Bell pepper | Ghost pepper\"\n            },\n            {\n                hint: \"Fresno\",\n                answers: [\n                    \"Sacramento\",\n                    \"Santa Cruz\",\n                    \"Santa Barbara\",\n                    \"Anaheim\",\n                    \"Oakland\"\n                ],\n                correct: \"Anaheim\",\n                explanation: \"Fresno pepper | Anaheim pepper\"\n            },\n            {\n                hint: \"Aleppo\",\n                answers: [\n                    \"Damascus\",\n                    \"Tuscan\",\n                    \"Calabrian\",\n                    \"Tblisi\",\n                    \"Milan\"\n                ],\n                correct: \"Calabrian\",\n                explanation: \"Aleppo pepper | Calabrian chili\"\n            }\n        ]\n    },\n    \"20241128\": {\n        rule: {\n            pattern: \"State abbreviations\",\n            explanation: \"the first 2 letters of the hint reference a state abbreviation and the answer is a neighboring state of the hint\"\n        },\n        sets: [\n            {\n                hint: \"Orange\",\n                answers: [\n                    \"Idiot\",\n                    \"Cruel\",\n                    \"Blood\",\n                    \"Dunce\",\n                    \"Dim\"\n                ],\n                correct: \"Idiot\",\n                explanation: \"Oregon (OR) | Idaho (ID)\"\n            },\n            {\n                hint: \"Massive\",\n                answers: [\n                    \"Risk\",\n                    \"Attack\",\n                    \"Boulder\",\n                    \"Earthquake\",\n                    \"Tree\"\n                ],\n                correct: \"Risk\",\n                explanation: \"Massachusetts (MA) | Rhode Island (RI)\"\n            },\n            {\n                hint: \"Alter\",\n                answers: [\n                    \"Change\",\n                    \"Hem\",\n                    \"Storm\",\n                    \"Typhoon\",\n                    \"Flood\"\n                ],\n                correct: \"Flood\",\n                explanation: \"Alabama (AL) | Florida (FL)\"\n            },\n            {\n                hint: \"Utter\",\n                answers: [\n                    \"Say\",\n                    \"Color\",\n                    \"Speak\",\n                    \"Hue\",\n                    \"Announce\"\n                ],\n                correct: \"Color\",\n                explanation: \"Utter (UT) | Colorado (CO)\"\n            }\n        ]\n    },\n    \"20241129\": {\n        rule: {\n            pattern: \"Vowel swap\",\n            explanation: \"Change a vowel for new word\"\n        },\n        sets: [\n            {\n                hint: \"Crush\",\n                answers: [\n                    \"Candy\",\n                    \"Craving\",\n                    \"Crash\",\n                    \"Clobber\",\n                    \"Crunch\"\n                ],\n                correct: \"Crash\",\n                explanation: \"u → a\"\n            },\n            {\n                hint: \"Sweet\",\n                answers: [\n                    \"Swell\",\n                    \"Swear\",\n                    \"Sweat\",\n                    \"Swoon\",\n                    \"Swipe\"\n                ],\n                correct: \"Sweat\",\n                explanation: \"e → a\"\n            },\n            {\n                hint: \"Knit\",\n                answers: [\n                    \"Naught\",\n                    \"Knot\",\n                    \"Not\",\n                    \"Knife\",\n                    \"Knight\"\n                ],\n                correct: \"Knot\",\n                explanation: \"i → o\"\n            },\n            {\n                hint: \"Flush\",\n                answers: [\n                    \"Film\",\n                    \"Fluster\",\n                    \"Fling\",\n                    \"Fresh\",\n                    \"Flash\"\n                ],\n                correct: \"Flash\",\n                explanation: \"u → a\"\n            }\n        ]\n    },\n    \"20241130\": {\n        rule: {\n            pattern: \"Hairy Creatures\",\n            explanation: \"Famous hairy/furry creatures from another planet\"\n        },\n        sets: [\n            {\n                hint: \"Barf\",\n                answers: [\n                    \"Chewy\",\n                    \"Green\",\n                    \"Puke\",\n                    \"Crunchy\",\n                    \"Sick\"\n                ],\n                correct: \"Chewy\",\n                explanation: \"Barf = Spaceballs | Chewy = Star Wars\"\n            },\n            {\n                hint: \"Rocket\",\n                answers: [\n                    \"Gadget\",\n                    \"Thingy\",\n                    \"Whatchamacallit\",\n                    \"Gizmo\",\n                    \"Doohickey\"\n                ],\n                correct: \"Gizmo\",\n                explanation: \"Rocket = Guardians of the Galaxy | Gizmo = Gremlins\"\n            },\n            {\n                hint: \"Wicket\",\n                answers: [\n                    \"Cricket\",\n                    \"Hem\",\n                    \"Birdie\",\n                    \"Sew\",\n                    \"Stitch\"\n                ],\n                correct: \"Stitch\",\n                explanation: \"Wicket = Star Wars | Stitch = Lilo & Stitch\"\n            },\n            {\n                hint: \"Alf\",\n                answers: [\n                    \"Data\",\n                    \"Tribbles\",\n                    \"Spock\",\n                    \"Jar Jar\",\n                    \"Jabba\"\n                ],\n                correct: \"Tribbles\",\n                explanation: \"Alf = Alf | Tribbles = Star Trek\"\n            }\n        ]\n    },\n    \"20241131\": {\n        rule: {\n            pattern: \"Word associations\",\n            explanation: \"each word has an association with the answer to form a restaurant chain\"\n        },\n        sets: [\n            {\n                hint: \"Patty & Charles\",\n                answers: [\n                    \"Burger King\",\n                    \"Pizza Hut\",\n                    \"Cracker Barrel\",\n                    \"Taco Bell\",\n                    \"Panera Bread\"\n                ],\n                correct: \"Burger King\",\n                explanation: \"Burger patty & King Charles\"\n            },\n            {\n                hint: \"Cheese & Chess\",\n                answers: [\n                    \"Cookies & Cream\",\n                    \"Ben & Jerry's\",\n                    \"Haagen Dazs\",\n                    \"Dairy Queen\",\n                    \"Baskin Robbins\"\n                ],\n                correct: \"Dairy Queen\",\n                explanation: \"Cheese is a dairy product & Queen is a chess piece\"\n            },\n            {\n                hint: \"Idol & Stag\",\n                answers: [\n                    \"Peets\",\n                    \"Starbucks\",\n                    \"Dunkin Donuts\",\n                    \"Coffee Bean & Tea Leaf\",\n                    \"Au Bon Pain\"\n                ],\n                correct: \"Starbucks\",\n                explanation: \"an idol is a star and a stag is a buck\"\n            },\n            {\n                hint: \"Ghost & Grayskull\",\n                answers: [\n                    \"Wendy's\",\n                    \"Shake Shack\",\n                    \"Jack In The Box\",\n                    \"Five Guys\",\n                    \"White Castle\"\n                ],\n                correct: \"White Castle\",\n                explanation: \"Ghosts are white & Grayskull is the castle in He-Man\"\n            }\n        ]\n    },\n    \"20241201\": {\n        rule: {\n            pattern: \"One removed\",\n            explanation: \"the hint and answer are tied together by a common word\"\n        },\n        sets: [\n            {\n                hint: \"Baker\",\n                answers: [\n                    \"Loaf\",\n                    \"Cash\",\n                    \"Butcher\",\n                    \"Josephine\",\n                    \"Pastry\"\n                ],\n                correct: \"Cash\",\n                explanation: \"A baker bakes bread and works with dough which are words for $\"\n            },\n            {\n                hint: \"Toolbox\",\n                answers: [\n                    \"Stranger\",\n                    \"River\",\n                    \"Planet\",\n                    \"Cocktail\",\n                    \"Dough\"\n                ],\n                correct: \"Coctail\",\n                explanation: \"A toolbox holds a screwdriver and a screwdriver is a cocktail\"\n            },\n            {\n                hint: \"Actor\",\n                answers: [\n                    \"Role\",\n                    \"Cher\",\n                    \"Power\",\n                    \"Biology\",\n                    \"Code\"\n                ],\n                correct: \"An actor reads a script and a script is a piece of code\",\n                explanation: \"\"\n            },\n            {\n                hint: \"Landscaper\",\n                answers: [\n                    \"Mushrooms\",\n                    \"Marijuana\",\n                    \"Cocaine\",\n                    \"Acid\",\n                    \"Ecstasy\"\n                ],\n                correct: \"Marijuana\",\n                explanation: \"A landscaper cuts grass and pulls weeds which are names for Marijuana\"\n            }\n        ]\n    },\n    \"20241202\": {\n        rule: {\n            pattern: \"One to the other\",\n            explanation: \"A word that connects hint to answer\"\n        },\n        sets: [\n            {\n                hint: \"Desert Gold\",\n                answers: [\n                    \"Rose\",\n                    \"Diamond\",\n                    \"Quartz\",\n                    \"Opal\",\n                    \"Emerald\"\n                ],\n                correct: \"Rose\",\n                explanation: \"Desert Rose | Rose Gold\"\n            },\n            {\n                hint: \"Blood Blossom\",\n                answers: [\n                    \"Pink\",\n                    \"Orange\",\n                    \"Cherry\",\n                    \"Plasma\",\n                    \"Blister\"\n                ],\n                correct: \"Orange\",\n                explanation: \"Blood Orange | Orange Blossom\"\n            },\n            {\n                hint: \"Blue Plate\",\n                answers: [\n                    \"Iron\",\n                    \"Copper\",\n                    \"Wood\",\n                    \"Aluminum\",\n                    \"Steel\"\n                ],\n                correct: \"Steel\",\n                explanation: \"Blue Steel | Steel Plate\"\n            },\n            {\n                hint: \"Fresh Bar\",\n                answers: [\n                    \"Soap\",\n                    \"Juice\",\n                    \"Spring\",\n                    \"Tapas\",\n                    \"Wine\"\n                ],\n                correct: \"Juice\",\n                explanation: \"Fresh Juice | Juice Bar\"\n            }\n        ]\n    },\n    \"20241203\": {\n        rule: {\n            pattern: \"hidden words associated with atlas/map\",\n            explanation: \"hidden words commonly used with geography, atlases and maps\"\n        },\n        sets: [\n            {\n                hint: \"Maple\",\n                answers: [\n                    \"Bread\",\n                    \"Tree\",\n                    \"Syrup\",\n                    \"Leaf\",\n                    \"Yeast\"\n                ],\n                correct: \"Yeast\",\n                explanation: \"Maple -> Map | Yeast -> East\"\n            },\n            {\n                hint: \"Platitude\",\n                answers: [\n                    \"Awestruck\",\n                    \"Amazing\",\n                    \"Aghast\",\n                    \"Wild\",\n                    \"Awesome\"\n                ],\n                correct: \"Awestruck\",\n                explanation: \"Platitude -> Latitude | Awestruck -> West\"\n            },\n            {\n                hint: \"Poinsettia\",\n                answers: [\n                    \"Dog\",\n                    \"Donkey\",\n                    \"Donut\",\n                    \"Deer\",\n                    \"Daisy\"\n                ],\n                correct: \"Donkey\",\n                explanation: \"Poinsettia -> Inset | Donkey -> Key\"\n            },\n            {\n                hint: \"Unorthodox\",\n                answers: [\n                    \"Contained\",\n                    \"Encompassing\",\n                    \"Different\",\n                    \"Whole\",\n                    \"Entire\"\n                ],\n                correct: \"Encompassing\",\n                explanation: \"Unorthodox -> North | Encompassing -> Compass\"\n            }\n        ]\n    },\n    \"20241204\": {\n        rule: {\n            pattern: \"Missing connector\",\n            explanation: \"Each hint answer pair has a word that connects them\"\n        },\n        sets: [\n            {\n                hint: \"Bunny\",\n                answers: [\n                    \"Bourbon\",\n                    \"Whiskey\",\n                    \"Gin\",\n                    \"Scotch\",\n                    \"Vodka\"\n                ],\n                correct: \"Scotch\",\n                explanation: \"Bunny hop | Hopscotch\"\n            },\n            {\n                hint: \"Holy\",\n                answers: [\n                    \"Bottle\",\n                    \"Cheese\",\n                    \"Death\",\n                    \"Orange\",\n                    \"Lunch\"\n                ],\n                correct: \"Bottle\",\n                explanation: \"Holy water | Water bottle\"\n            },\n            {\n                hint: \"Car\",\n                answers: [\n                    \"Trunks\",\n                    \"Tie\",\n                    \"Jacket\",\n                    \"Belt\",\n                    \"Socks\"\n                ],\n                correct: \"Belt\",\n                explanation: \"Car seat | Seat belt\"\n            },\n            {\n                hint: \"Easy\",\n                answers: [\n                    \"A\",\n                    \"Flip\",\n                    \"Kiss\",\n                    \"Light\",\n                    \"Dish\"\n                ],\n                correct: \"Light\",\n                explanation: \"Easy street | Streetlight\"\n            }\n        ]\n    },\n    \"20241205\": {\n        rule: {\n            pattern: \"Popular acronyms\",\n            explanation: \"Combine 1st letter from each word in the hint/answer for a well-known acronym\"\n        },\n        sets: [\n            {\n                hint: \"Pet dog android\",\n                answers: [\n                    \"Cat hair blanket\",\n                    \"Taste my iguana\",\n                    \"Chunky rhino alert\",\n                    \"Slam poet partridge\",\n                    \"Koala bear bank\"\n                ],\n                correct: \"Taste my iguana\",\n                explanation: \"PDA (public display of affection) | TMI (too much information) \"\n            },\n            {\n                hint: \"Dark night ranger\",\n                answers: [\n                    \"Ranch may ketchup\",\n                    \"Sweet potato fries\",\n                    \"Fried pickled okra\",\n                    \"Zest my lime\",\n                    \"Hot wing sauce\"\n                ],\n                correct: \"Sweet potato fries\",\n                explanation: \"DNR (do not resuscitate) | SPF (sun protection factor)\"\n            },\n            {\n                hint: \"Pink ice necklace\",\n                answers: [\n                    \"Snow angel custard\",\n                    \"Hot brownie mud\",\n                    \"Ruby red raindrop\",\n                    \"Sand hat hangover\",\n                    \"Pickled duck feet\"\n                ],\n                correct: \"Pickled duck feet\",\n                explanation: \"PIN (personal identification number) | PDF (portable document format)\"\n            },\n            {\n                hint: \"Drink sun tea\",\n                answers: [\n                    \"Feed my porcupine\",\n                    \"Cancel that halo\",\n                    \"Rad old toupee\",\n                    \"Sexy new legs\",\n                    \"Flip your burger\"\n                ],\n                correct: \"Sexy new legs\",\n                explanation: \"DST (daylight savings time) | SNL (saturday night live)\"\n            }\n        ]\n    },\n    \"20241206\": {\n        rule: {\n            pattern: \"Missing link\",\n            explanation: \"the answer is linked to the 2nd word of the hint and makes a TV show or movie\"\n        },\n        sets: [\n            {\n                hint: \"Hulk Hogan\",\n                answers: [\n                    \"Heroes\",\n                    \"Villains\",\n                    \"Cheaters\",\n                    \"Saviors\",\n                    \"Snakes\"\n                ],\n                correct: \"Heroes\",\n                explanation: \"Hogan's Heroes\"\n            },\n            {\n                hint: \"Sally Field\",\n                answers: [\n                    \"Movies\",\n                    \"Stars\",\n                    \"Wishes\",\n                    \"Dreams\",\n                    \"Awards\"\n                ],\n                correct: \"Dreams\",\n                explanation: \"Field of Dreams\"\n            },\n            {\n                hint: \"Prince Charles\",\n                answers: [\n                    \"Credit\",\n                    \"Charge\",\n                    \"Cash\",\n                    \"Check\",\n                    \"Debt\"\n                ],\n                correct: \"Charge\",\n                explanation: \"Charles in Charge\"\n            },\n            {\n                hint: \"Barry White\",\n                answers: [\n                    \"Iris\",\n                    \"Lotus\",\n                    \"Rose\",\n                    \"Daisy\",\n                    \"Cactus\"\n                ],\n                correct: \"Lotus\",\n                explanation: \"White Lotus\"\n            }\n        ]\n    },\n    \"20241207\": {\n        rule: {\n            pattern: \"Go Fish\",\n            explanation: \"Add the hint letter to one of the potential answers to get a fish\"\n        },\n        sets: [\n            {\n                hint: \"T\",\n                answers: [\n                    \"Sanitizer\",\n                    \"Medic\",\n                    \"Mask\",\n                    \"Surgeon\",\n                    \"Nurse\"\n                ],\n                correct: \"Surgeon\",\n                explanation: \"Surgeon + t = Sturgeon\"\n            },\n            {\n                hint: \"M\",\n                answers: [\n                    \"Studio\",\n                    \"Salon\",\n                    \"Beauty\",\n                    \"Barber\",\n                    \"Perm\"\n                ],\n                correct: \"Salon\",\n                explanation: \"Salon + m = Salmon\"\n            },\n            {\n                hint: \"P\",\n                answers: [\n                    \"Car\",\n                    \"Truck\",\n                    \"Van\",\n                    \"Plane\",\n                    \"Canoe\"\n                ],\n                correct: \"Car\",\n                explanation: \"Car + p = Carp\"\n            },\n            {\n                hint: \"R\",\n                answers: [\n                    \"Comment\",\n                    \"Say\",\n                    \"Talk\",\n                    \"Speak\",\n                    \"Tout\"\n                ],\n                correct: \"Tout\",\n                explanation: \"Tout + r = Trout\"\n            }\n        ]\n    },\n    \"20241208\": {\n        rule: {\n            pattern: \"Go Fish\",\n            explanation: \"Hint and answer start with the name of a fish\"\n        },\n        sets: [\n            {\n                hint: \"Bassoon\",\n                answers: [\n                    \"Oboe\",\n                    \"Drummer\",\n                    \"Guitar\",\n                    \"Clarinet\",\n                    \"Bongo\"\n                ],\n                correct: \"Drummer\",\n                explanation: \"(Bass)oon -> Bass | (Drum)mer -> Drum\"\n            },\n            {\n                hint: \"Herringbone\",\n                answers: [\n                    \"Perchance\",\n                    \"Maybe\",\n                    \"Possibly\",\n                    \"Sometimes\",\n                    \"Never\"\n                ],\n                correct: \"Perchance\",\n                explanation: \"(Herring)bone -> Herring | (Perch)ance -> Perch\"\n            },\n            {\n                hint: \"Coddle\",\n                answers: [\n                    \"Sugar\",\n                    \"Garland\",\n                    \"Flower\",\n                    \"Lei\",\n                    \"Honey\"\n                ],\n                correct: \"Garland\",\n                explanation: \"(Cod)dle -> Cod | (Gar)land -> Gar\"\n            },\n            {\n                hint: \"Charcoal\",\n                answers: [\n                    \"Tile\",\n                    \"Window\",\n                    \"Wood\",\n                    \"Stone\",\n                    \"Carpet\"\n                ],\n                correct: \"Carpet\",\n                explanation: \"(Char)coal -> Char | (Carp)et -> Carp\"\n            }\n        ]\n    },\n    \"20241209\": {\n        rule: {\n            pattern: \"Hidden Trees\",\n            explanation: \"the name of a tree is hidden in hint and answer\"\n        },\n        sets: [\n            {\n                hint: \"Cloak\",\n                answers: [\n                    \"Sword\",\n                    \"Captain\",\n                    \"Helm\",\n                    \"Guide\",\n                    \"Shield\"\n                ],\n                correct: \"Helm\",\n                explanation: \"Cl(oak) -> Oak | H(elm) -> Elm\"\n            },\n            {\n                hint: \"Steak\",\n                answers: [\n                    \"Claim\",\n                    \"Money\",\n                    \"Gold\",\n                    \"Cash\",\n                    \"Award\"\n                ],\n                correct: \"Cash\",\n                explanation: \"S(teak) -> Teak | C(ash) -> Ash\"\n            },\n            {\n                hint: \"Spine\",\n                answers: [\n                    \"Confirm\",\n                    \"Agree\",\n                    \"Deny\",\n                    \"Knee\",\n                    \"Hip\"\n                ],\n                correct: \"Confirm\",\n                explanation: \"S(pine) -> Pine | Con(fir)m -> Fir\"\n            },\n            {\n                hint: \"Naplam\",\n                answers: [\n                    \"Maim\",\n                    \"Scar\",\n                    \"Difigure\",\n                    \"Explode\",\n                    \"Erupt\"\n                ],\n                correct: \"Disfigure\",\n                explanation: \"Na(palm) -> Palm | Dis(fig)ure -> Fig\"\n            }\n        ]\n    },\n    \"20241210\": {\n        rule: {\n            pattern: \"Adam or Addams\",\n            explanation: \"associated with Adam or Addams\"\n        },\n        sets: [\n            {\n                hint: \"Driver\",\n                answers: [\n                    \"Flea\",\n                    \"Worm\",\n                    \"Gnat\",\n                    \"Moth\",\n                    \"Ant\"\n                ],\n                correct: \"Ant\",\n                explanation: \"Adam Driver | Adam Ant\"\n            },\n            {\n                hint: \"Eve\",\n                answers: [\n                    \"Thigh\",\n                    \"Wing\",\n                    \"Rib\",\n                    \"Loin\",\n                    \"Shank\"\n                ],\n                correct: \"Rib\",\n                explanation: \"Adam and Eve | Adam's Rib\"\n            },\n            {\n                hint: \"West\",\n                answers: [\n                    \"Apple\",\n                    \"Orange\",\n                    \"Pear\",\n                    \"Plum\",\n                    \"Peach\"\n                ],\n                correct: \"Apple\",\n                explanation: \"Adam West | Adam's Apple\"\n            },\n            {\n                hint: \"Family\",\n                answers: [\n                    \"Sunday\",\n                    \"Monday\",\n                    \"Week\",\n                    \"Wednesday\",\n                    \"Month\"\n                ],\n                correct: \"Wednesday\",\n                explanation: \"Addams Family | Wednesday Addams\"\n            }\n        ]\n    }\n} // the first 2 letters of the hint reference a state abbreviation and the answer is a neighboring state of the hint\n //  -- Arrange & Laugh (Arkansas | Louisiana)\n //  -- Insert & Illicit (Indiana | Illinois) -- Gain & Scar (Georgia | South Carolina)\n //  -- Debate & Pattern (Delaware | Pennsylvania)\n //associations\n //Me & Rabbit = IHOP , Tiny Roman = Little Caesars, Under Method = Subway\n;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/constants/answerKey.ts\n"));

/***/ })

});